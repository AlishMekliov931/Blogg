@model blog.Models.Article
@using blog.Models

@{
    ViewBag.Title = "Details";
}
    <span class="author pull-right">
        @Model.Author.FullName
    </span>
<div class="container">
    <div class="well">

        <article>
            <header>
                <h1 style="text-align:center;color: #080d49">
                    @Model.Title
                </h1>
            </header>
            <h5 style="text-align:center;color: #080d49">
                @Model.Content
            </h5>
                <footer style="display: inline-block">
                        @if (User.IsInRole("Admin") || Model.IsAuthor(User.Identity.Name))
                    {
                            <span class="pull-right">
                                @Html.ActionLink("Edit", "Edit", "Article", new { @id = Model.Id }, new { @class = "btn btn-success btn-xs" })
                                @Html.ActionLink("Delete", "Delete", "Article", new { @id = Model.Id }, new { @class = "btn btn-danger btn-xs" })
                            </span><br />
                        }
                </footer> 
            <div style="border: 2px ; color: #ffffff; padding: 5px; border-radius: 10px; background: #3f95fe" class="pull-right">
                @Model.Likes Like it!
            </div><br />  
            @if (Request.IsAuthenticated && !Model.IsLiked(User.Identity.Name, Model.Id))
            {
                <br/>
                <span class="pull-right">
                    @Html.ActionLink("Like", "Post", "Like", new { @name = User.Identity.Name, id = Model.Id }, new { @class = "btn btn-info btn-xs", @style = "margin-right: 11px"})
                </span><br />
            } else if (Request.IsAuthenticated && Model.IsLiked(User.Identity.Name, Model.Id))
            {
                                <br/>
                <span class="pull-right">
                    @Html.ActionLink("Liked", "Post", "Like", new { @name = User.Identity.Name, id = Model.Id }, new { @class = "btn btn-info btn-xs", @style = "margin-right: 11px"})
                </span><br />
            }
        </article>
            <div style="display:inline">
                @if (Request.IsAuthenticated)
                {
                    @*@Html.ActionLink("Comment", "Create", "Comment", new { @id = Model.Id }, new { @class = "btn btn-primary btn-xs" })*@
                    @Html.Partial("_CreateCommentPartial", new Comment() { ArticleId = Model.Id })
                }
            </div>
        @if (Model.Comments.Any())
        { 
            <br />
            <h3 style="color: #684d01">Comments:</h3>
              <div cl>
                  @foreach (var comment in Model.Comments)
                  {             
                     <h4 style="color: #684d01">@comment.Author: @comment.Content </h4>
                    <div class="author pull-left">    
                    </div>
                     <div>
                         @if (User.IsInRole("Admin") || Model.IsAuthor(User.Identity.Name) || User.Identity.Name.Equals(comment.UeserEmail))
                         {
                             using (Html.BeginForm("Delete", "Comment", new { id = comment.Id }, FormMethod.Post, new { @class = "form-horizontal" }))
                             {
                                 <div class="form-group">
                                     <input type="submit" value="Delete" class="btn btn-xs" style="background: #ffa1a1; margin-left: 15px" />
                                 </div>
                             }
                         }
                     </div>
                  }
              </div>
        }
    </div>
    <hr />
    </div>
